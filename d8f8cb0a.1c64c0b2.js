(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{130:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return b}));var a=t(2),r=t(6),o=(t(0),t(142)),i={id:"js6",title:"Objects",sidebar_label:"Objects"},c={id:"js6",title:"Objects",description:"Introduction",source:"@site/docs/js6.md",permalink:"/notebook/docs/js6",editUrl:"https://github.com/savithagollamudi/notebook/tree/master/notes-website/docs/js6.md",sidebar_label:"Objects",sidebar:"someSidebar",previous:{title:"Arrays",permalink:"/notebook/docs/js5"},next:{title:"World of loops",permalink:"/notebook/docs/js7"}},s=[{value:"Introduction",id:"introduction",children:[]},{value:"Creating Object literals",id:"creating-object-literals",children:[]},{value:"Accessing object properties",id:"accessing-object-properties",children:[]},{value:"Updating and adding properties",id:"updating-and-adding-properties",children:[]},{value:"Nested Arrays and Objects",id:"nested-arrays-and-objects",children:[]},{value:"Objects &amp; Reference Types",id:"objects--reference-types",children:[]},{value:"Array / Object Equality",id:"array--object-equality",children:[]}],l={rightToc:s};function b(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"introduction"},"Introduction"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Objects are collections of properties"),Object(o.b)("li",{parentName:"ol"},"Properties are k,v pairs"),Object(o.b)("li",{parentName:"ol"},"Rather than accessing data using index, we use custom keys")),Object(o.b)("p",null,"Object is more like a blob that holds diff pieces of data (K-V pairs, necessarily without any order)"),Object(o.b)("hr",null),Object(o.b)("h2",{id:"creating-object-literals"},"Creating Object literals"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"{} - > empty object")),Object(o.b)("p",null,"Just like arrays, when you store an obj in a variable it is reference to that obj."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},Object(o.b)("strong",{parentName:"p"},"Valid Keys : ")),Object(o.b)("p",{parentName:"div"},"All keys are converted to strings except symbols"))),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"const fitBitdata = {\n  steps: 3078,\n  miles: 211.7,\n  avgCalorieBurn: 5755,\n  workoutThisWeek: \"5 of 7\",\n  avgSleep: \"2.13\",\n  45: \"forty five\",\n};\n\nfitBitdata.miles; //211.7\nfitBitdata.avgCalorieBurn //5755\nfitBitData.45 //error because its converted to string\nfitBitdata.'45' //still an error coz we dont have key '45'\nfitBitdata['45'] //fortyfive\n")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"accessing-object-properties"},"Accessing object properties"),Object(o.b)("p",null,"Whats happening here is when you do ",Object(o.b)("inlineCode",{parentName:"p"},'const fitBitdata = {45: "forty five",};'),". 45 is converted to '45', then it searches for a matching key."),Object(o.b)("p",null,"inside of object we can think of it as ",Object(o.b)("inlineCode",{parentName:"p"},"const fitBitdata = {'45': \"forty five\",};"),". when we ask for ",Object(o.b)("inlineCode",{parentName:"p"},"fitBitdata[45] or fitBitdata['45']")," it is going to look for '45', it finds and gives us a value."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Why to use [] aside from numbers as a key? where else would you use it?")),Object(o.b)("p",null,"Sometimes we've property names that may not be valid identifiers."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"let my cat = 'kitty' //error\nlet 76trombones = 'trombones' //error\n\nconst data  = {\n    '76 trombones' : 'great song'\n}\n\ndata.76 trombones //error\ndata['76 trombones'] //great song.\n// works fine coz key have been stored as a string, even though its an invalid identifier.\n")),Object(o.b)("p",null,"sometimes we want to use a dynamic value like variable to access data from object."),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const colors = {\n  red: "#eb4db",\n  yellow: "#f9ca24",\n  blue: "#3036b",\n};\n\ncolors.blue; //#3036b\ncolors.yellow; // #f9ca24\ncolors[yellow]; //error -> its going to look for a variable yellow.\nyellow; // error -> coz we dont have variable yellow, we have yellow key\ncolors["yellow"]; ///#f9ca24\n\nlet mysteryColor = "yellow";\ncolors[mysteryColor]; // #f9ca24 -> this will work\n//because we have a var mysteryColor which internally has a key yellow & it looks for its value.\ncolors.mysteryColor; // undefined-> coz we dont have a property mysteryColor\n//we get undefined when we try to access that doesnt exist\n\ncolors["bl" + "ue"]; // #3036b\n')),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"Use square brackets [] when you've dynamic value as a key or when you have an invalid identifier."))),Object(o.b)("hr",null),Object(o.b)("h2",{id:"updating-and-adding-properties"},"Updating and adding properties"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'//Adding\nconst reviews = {};\nreviews["queenBee49"] = 4.0;\nreviews.smith78 = 3.5;\nreviews.colt = 5;\n\n//Updating\n\nreviews["colt"] = 4.5;\nreviews["queenBee49"] += 2;\nreviews.smith78++;\n')),Object(o.b)("hr",null),Object(o.b)("h2",{id:"nested-arrays-and-objects"},"Nested Arrays and Objects"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const student = {\n  first: "David",\n  last: "Jones",\n  strength: ["music", "art"],\n  exams: {\n    midTerm: 92,\n    final: 88,\n  },\n};\n\nconst avg = (student.exams.midTerm + student.exams.final) / 2; // 90\nstudent.strength[1]; //art\n\n//to get objects in order - Array of objects\nconst shoppingCart = [\n  {\n    product: "JENGA",\n    price: "6.88$",\n    quantity: 1,\n  },\n  {\n    product: "Echo Dot",\n    price: "29.99$",\n    quantity: 3,\n  },\n  {\n    product: "Fire Stick",\n    price: "39.99$",\n    quantity: 2,\n  },\n];\n\nconst game = {\n  player1: {\n    uName: "blue",\n    playingAs: "X",\n  },\n  player2: {\n    uName: "muffin",\n    playingAs: "O",\n  },\n  board: [\n    ["O", null, "X"],\n    ["X", "O", "X"],\n    ["null", "O", "X"],\n  ],\n};\n')),Object(o.b)("hr",null),Object(o.b)("h2",{id:"objects--reference-types"},"Objects & Reference Types"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'const food = {\n  italian: "pizza",\n  indian: "roti",\n  american: "donut",\n};\n\nfood2 = food;\nfood2.mexican = "rice";\n\nfood; //{italian: "pizza", indian: "roti", american: "donut", mexican: "rice"}\nfood2; //{italian: "pizza", indian: "roti", american: "donut", mexican: "rice"}\n')),Object(o.b)("p",null,"Both contain same data, since they are referring to one object"),Object(o.b)("hr",null),Object(o.b)("h2",{id:"array--object-equality"},"Array / Object Equality"),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),'let nums = [1, 2, 3];\nlet nums2 = [1, 2, 3];\nnums === nums2; //false\n[] === []; //false -> coz both are referenced at diff locations\n{} === {} //false\n{a : 1} === {a : 1} //false\nlet d1 = {a : 1};\nlet d2 = d1\nd1===d2 //true\n\nlet nums3 = nums;\nnums3 === nums; //true\n//Example 2\nconst user = {\n  uName: "cherry",\n  email: "cherry@gmail.com",\n  notifications: [],\n};\nif (user.notifications === []) {\n  console.log("No new notifications");\n} // this doesn\'t work -> referencing diff locations\n\n//instead\n\nif (user.notifications.length === 0) {\n  console.log("No new notifications");\n}\n\n//or\nif (!user.notifications.length) {\n  console.log("No new notifications");\n}\n')))}b.isMDXComponent=!0},142:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var a=t(0),r=t.n(a);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),b=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=b(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},u=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=b(t),u=a,m=d["".concat(i,".").concat(u)]||d[u]||p[u]||o;return t?r.a.createElement(m,c(c({ref:n},l),{},{components:t})):r.a.createElement(m,c({ref:n},l))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=t[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);